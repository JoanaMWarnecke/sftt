{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"meas",
				"meas_model"
			],
			[
				"ma",
				"map_object"
			],
			[
				"valid",
				"valid_point"
			],
			[
				"my_",
				"my_map\tstatement"
			],
			[
				"idx",
				"idx_n\tstatement"
			],
			[
				"ra",
				"ray_hits\tstatement"
			],
			[
				"valid_point_",
				"valid_point_torch\tfunction"
			],
			[
				"vad",
				"valid_point_torch"
			],
			[
				"map",
				"map_object\tparam"
			],
			[
				"d",
				"d_vec\tstatement"
			],
			[
				"from",
				"from_numpy"
			],
			[
				"AD",
				"AD_AD\tstatement"
			],
			[
				"AM",
				"AM_AD\tstatement"
			],
			[
				"va",
				"valid_point_torch\tfunction"
			],
			[
				"val",
				"valid_point\tfunction"
			],
			[
				"A",
				"AB_AB\tstatement"
			],
			[
				"bitw",
				"bitwise_and\tinstance"
			],
			[
				"AB",
				"AB_AB\tstatement"
			],
			[
				"Am",
				"AM_AB"
			],
			[
				"is",
				"is_in_rect_brad\tfunction"
			],
			[
				"sorted",
				"sorted_idx\tstatement"
			],
			[
				"ones",
				"ones_like\tfunction"
			],
			[
				"motio",
				"motion_model\tclass"
			],
			[
				"pr",
				"prior_dist\tclass"
			],
			[
				"dp",
				"dphi_cov"
			],
			[
				"pl",
				"pl_obj\tstatement"
			],
			[
				"resa",
				"reshape"
			],
			[
				"dph",
				"dphi_pred\tstatement"
			],
			[
				"r",
				"r_cov\tstatement"
			],
			[
				"nanarg",
				"nanargmin\tfunction"
			],
			[
				"nan",
				"NaN\tinstance"
			],
			[
				"ray",
				"ray_hits"
			],
			[
				"all",
				"all_points\tstatement"
			],
			[
				"me",
				"meas_model\tclass"
			],
			[
				"norma",
				"normal_pdf\tfunction"
			],
			[
				"v",
				"v_cov\tstatement"
			],
			[
				"norm",
				"normal\tfunction"
			],
			[
				"R",
				"Robot\tclass"
			],
			[
				"se",
				"sensor_noise_cov\tstatement"
			],
			[
				"re",
				"remove_robot\tfunction"
			],
			[
				"Robo",
				"RobotIllustrator\tclass"
			],
			[
				"t",
				"t_handles\tstatement"
			],
			[
				"plot",
				"plot_handles"
			],
			[
				"biw",
				"bitwise_and\tinstance"
			],
			[
				"base",
				"base_point\tstatement"
			],
			[
				"c",
				"class\tNew Class"
			],
			[
				"rand",
				"random_integers\tfunction"
			],
			[
				"mult",
				"multivariate_normal\tstatement"
			],
			[
				"N",
				"N_particles\tstatement"
			],
			[
				"ch",
				"choice\tfunction"
			],
			[
				"m",
				"multivariate_normal\tfunction"
			],
			[
				"pri",
				"prior_dist\tstatement"
			],
			[
				"train",
				"train_op\tstatement"
			],
			[
				"TRAIN",
				"TRAIN_DATA_SIZE"
			],
			[
				"reduce",
				"reduce_mean"
			],
			[
				"flat",
				"flat_fm_real\tstatement"
			],
			[
				"fm",
				"fm_fake"
			],
			[
				"inter",
				"interpolated_sample\tparam"
			],
			[
				"in",
				"interpolated_sample\tparam"
			],
			[
				"interpolat",
				"interpolated_sample"
			],
			[
				"stat",
				"status_string\tstatement"
			],
			[
				"gen",
				"gen_output\tstatement"
			],
			[
				"comb",
				"combined_y_pred\tstatement"
			],
			[
				"coim",
				"combined_input_for_g_loss\tstatement"
			],
			[
				"gan",
				"gan_sample\tstatement"
			],
			[
				"SAM",
				"SAMPLE_SIZE\tstatement"
			],
			[
				"desc",
				"descriminator\tfunction"
			],
			[
				"use",
				"use_dropout\tparam"
			],
			[
				"img",
				"img_name\tstatement"
			],
			[
				"path",
				"path_to_msks\tstatement"
			],
			[
				"appl",
				"apply_bb"
			],
			[
				"py",
				"pyplot\tmodule"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"pat",
				"path_to_img\tstatement"
			],
			[
				"ims",
				"imshow\tfunction"
			],
			[
				"mask",
				"mask\tstatement"
			],
			[
				"bit",
				"bitwise_not\tstatement"
			],
			[
				"masked",
				"masked_image\tstatement"
			],
			[
				"sav",
				"SAVE\tstatement"
			],
			[
				"save",
				"save_path\tparam"
			],
			[
				"image",
				"image_name\tstatement"
			],
			[
				"glob",
				"glob0\tfunction"
			],
			[
				"sub",
				"sub_str\tparam"
			],
			[
				"gener",
				"generator"
			],
			[
				"res",
				"resize_nearest_neighbor"
			],
			[
				"leak",
				"leaky_relu"
			],
			[
				"late",
				"latent_a\tstatement"
			],
			[
				"sample",
				"sample_noise\tstatement"
			],
			[
				"laten",
				"latent_size\tparam"
			],
			[
				"latent",
				"latent_vector_a\tstatement"
			],
			[
				"resi",
				"resize_nearest_neighbor\tfunction"
			],
			[
				"noise",
				"noise_loss"
			],
			[
				"Su",
				"SummaryWriter"
			],
			[
				"merge",
				"merge_all\tfunction"
			],
			[
				"tot",
				"total_desc_loss\tstatement"
			],
			[
				"su",
				"summary\tmodule"
			],
			[
				"unsta",
				"unstacked_gen_output\tstatement"
			],
			[
				"SAVE",
				"SAVE_CHECKPOINT_DIR\tstatement"
			],
			[
				"resize",
				"resize_bilinear\tfunction"
			],
			[
				"im",
				"image"
			],
			[
				"random",
				"random_sample\tfunction"
			],
			[
				"rep",
				"replay_buffer\tstatement"
			],
			[
				"IMAGE",
				"IMAGE_HEIGHT\tstatement"
			],
			[
				"BUFFER",
				"BUFFER_SIZE\tstatement"
			],
			[
				"buff",
				"buffer_size\tparam"
			],
			[
				"de",
				"deque\tclass"
			],
			[
				"batch",
				"batch_size\tstatement"
			],
			[
				"num",
				"num_kernels\tparam"
			],
			[
				"input",
				"input_features\tparam"
			],
			[
				"mini",
				"minibatch_layer"
			],
			[
				"mi",
				"minibatch_layer"
			],
			[
				"q",
				"query_service_for_name\tfunction"
			],
			[
				"logo",
				"logo_grabber\tstatement"
			],
			[
				"letter",
				"letter_2\tforstmt"
			],
			[
				"lett",
				"letter_1\tforstmt"
			],
			[
				"com",
				"company\tforstmt"
			],
			[
				"que",
				"query_service\tfunction"
			],
			[
				"color",
				"color_2\tparam"
			],
			[
				"has",
				"has_identical_corner_color\tfunction"
			],
			[
				"des",
				"desc_vars\tstatement"
			],
			[
				"log",
				"log1p\tfunction"
			],
			[
				"sigmo",
				"sigmoid_cross_entropy_with_logits\tfunction"
			],
			[
				"real",
				"real_images\tstatement"
			],
			[
				"fea",
				"feature_matching\tfunction"
			],
			[
				"mean",
				"mean_fm_fake\tstatement"
			],
			[
				"ax",
				"axis"
			],
			[
				"kernel",
				"kernel_size"
			],
			[
				"mu",
				"multiply\tfunction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bootstrap_PF.py",
			"settings":
			{
				"buffer_size": 5281,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 7457,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "my_map.py",
			"settings":
			{
				"buffer_size": 2133,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "robot.py",
			"settings":
			{
				"buffer_size": 4031,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils_np.py",
			"settings":
			{
				"buffer_size": 3473,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils_torch.py",
			"settings":
			{
				"buffer_size": 3977,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "sftt.sublime-project",
			"settings":
			{
				"buffer_size": 1216,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"PAC",
				"Package Control: Disable Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 742.0,
		"history":
		[
			"s s h   j u g g e r n u t @ 1 0 . 0 . 1 . 2 3 9   N V _ G P U = 2   n v i d i a - d o c k e r   r u n   - t   - - r m   - v   / m e d i a / d e e p d r i v e : / m e d i a / d e e p d r i v e   - v   / m e d i a / S S D _ L I N K : / m e d i a / S S D _ L I N K   - v   / m e d i a / d e e p d r i v e / P r o j e c t _ b u i l d s / G A N / m a r k o / 2 0 1 7 _ 0 5 _ 1 8 _ 1 7 4 9 3 0 / G A N : / m e d i a / d e e p d r i v e / P r o j e c t _ b u i l d s / G A N / m a r k o / 2 0 1 7 _ 0 5 _ 1 8 _ 1 7 4 9 3 0 / G A N   - - n a m e   m a r k o _ a u t o l i v _ t e n s o r f l o w _ G P U _ C   a u t o l i v _ t e n s o r f l o w : 1 p 0 _ p 3     p y t h o n   \" / m e d i a / d e e p d r i v e / P r o j e c t _ b u i l d s / G A N / m a r k o / 2 0 1 7 _ 0 5 _ 1 8 _ 1 7 4 9 3 0 / G A N / f r o g _ g a n . p y \" ;  "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/marko/repositories/sftt"
	],
	"file_history":
	[
		"/home/marko/.config/sublime-text-3/Packages/anaconda/Anaconda.sublime-settings",
		"/home/marko/repositories/sftt/filter_params.py",
		"/home/marko/repositories/sftt/Dockerfiles/torch_pf/Dockerfile",
		"/home/marko/repositories/sftt/main.py",
		"/home/marko/repositories/sftt/map.py",
		"/home/marko/repositories/local/bootstrap_PF.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/load_images_from_dir.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/minibatch_layer.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/Dockerfiles/Autoliv_Tensorflow_1p0_p3/Dockerfile",
		"/home/marko/repositories/gan_stuff/gan_stuff/gan_stuff.sublime-project",
		"/home/marko/repositories/gan_stuff/Dockerfiles/Autoliv_Tensorflow_1p0_p3/Dockerfile",
		"/home/marko/repositories/gan_stuff/gan_stuff/gan.py",
		"/home/marko/.config/sublime-text-3/Packages/Theme - Cobalt2/Cobalt2.sublime-theme",
		"/home/marko/repositories/gan_stuff/gan_stuff/replay_buffer.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/cifar10dataLoader.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/gan_2.py",
		"/home/marko/repositories/gan_stuff/Dockerfiles/Autoliv_Tensorflow_1p0/Dockerfile",
		"/home/marko/repositories/gan_stuff/gan_stuff/data_downloader/logo_grabber.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/data_augmentation/adjust_size.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/data_downloader/company_scanner.py",
		"/home/marko/.config/sublime-text-3/Packages/anaconda/Default (Linux).sublime-keymap",
		"/home/marko/repositories/gan_stuff/gan_stuff/quick_plot_junk.py",
		"/home/marko/repositories/receptive_field.py",
		"/home/marko/repositories/gan_stuff/gan_stuff/00000.png",
		"/home/marko/repositories/gan_stuff/gan_stuff/bit8dataLoader.py",
		"/home/marko/repositories/gan_stuff/GAN/cifar10dataLoader.py",
		"/home/marko/repositories/gan_stuff/GAN/frog_gan.py",
		"/home/marko/repositories/gan_stuff/gan.sublime-project",
		"/home/marko/repositories/GAN/frog_gan.py",
		"/media/deepdrive/Users/Marko/Autoliv/bit/src/mean_class_iou.py"
	],
	"find":
	{
		"height": 47.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"torch.Tensor",
			"Tensor",
			"utils_np",
			"st",
			"map",
			"axes",
			"map_object",
			"normal_pdf",
			"\\t",
			"'Time",
			"start",
			"True",
			"cool",
			"False",
			"async=True",
			"map_object",
			"\n#",
			"print",
			"my_map",
			"async=True",
			"cuda",
			"DoubleTensor",
			"(N, 1)",
			"gpu",
			"p",
			")",
			"x",
			"hits",
			"final_cond",
			"axis",
			"np",
			"self.",
			")\n",
			"diff",
			"points-by-",
			"[None, ...]",
			"rect",
			"savefig",
			"l",
			"lx",
			"sorted_idx",
			"new",
			"newax",
			"np.newaxis",
			"run_filter",
			"r_cov",
			"r_pred",
			"v_cov",
			"x",
			"01",
			"\n        ",
			"z_pred",
			"    print(st[:, 0], st[:, 1])\n",
			"\n    ",
			"#",
			"my_map",
			"\n#",
			"phi)",
			"valid_dists",
			"idx",
			"ray_hit",
			"ray_idx",
			"res",
			"valid_x",
			"x",
			"valid_particles",
			"particles",
			"kill_particles",
			"particles",
			"mm",
			"state",
			"reshape",
			"v_cov",
			"q_cov",
			"low=",
			"text_handles",
			"plot_handles",
			"robot",
			"plt",
			"point",
			"delete",
			"self.",
			"dist",
			"ADAD",
			"AMAD",
			"ABAB",
			"AMAB",
			"np.dot(AD, AD)",
			"np.dot(AM, AD)",
			"np.dot(AM, AB)",
			"0",
			".reshape(1, 2)",
			"0.5",
			"2",
			"r",
			"coords",
			"self.",
			"docstring for Rectangle",
			"mm",
			"b",
			"init_filter",
			"meas_model",
			".q",
			"q",
			"init_dist",
			"N",
			"\\",
			">,",
			"IMAGE_HEIGHT",
			"128",
			"print_stat",
			"IMAGE_WIDTH",
			"fm_real",
			"_g_",
			".dropout",
			"/6",
			"training,",
			"0.5",
			"batch_normalization",
			"u(x",
			"shape(",
			"shape",
			"print",
			"=0.2",
			"k/",
			"%f",
			".8",
			"="
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bootstrap_PF.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5281,
						"regions":
						{
						},
						"selection":
						[
							[
								2721,
								2721
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7457,
						"regions":
						{
						},
						"selection":
						[
							[
								487,
								487
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "my_map.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2133,
						"regions":
						{
						},
						"selection":
						[
							[
								1888,
								1888
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "robot.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4031,
						"regions":
						{
						},
						"selection":
						[
							[
								650,
								650
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1380.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "utils_np.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3473,
						"regions":
						{
						},
						"selection":
						[
							[
								318,
								318
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "utils_torch.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3977,
						"regions":
						{
						},
						"selection":
						[
							[
								840,
								840
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "sftt.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1216,
						"regions":
						{
						},
						"selection":
						[
							[
								1216,
								1216
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 690.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 651.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "torch_pf_D",
	"project": "sftt.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 280.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
